openapi: 3.0.0
info:
  title: KGrid Activator API
  description: KGrid Activator API provides access to the Knowledge Objects, Endpoints and
     KGrid Activator Server endpoints
  contact:
    email: kgrid-developers@umich.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://kgrid-activator.herokuapp.com
    description: Integration Activator
  - url: https://monkey-activator.kgrid.org
    description: Sandbox Activator
  - url: http://localhost:8080
    description: Local Instance
paths:
  /health:
    get:
      tags:
        - KGrid Activator Server
      summary: Returns health of the KGrid Activator
      description: |
        Returns a collection of endpoints
      operationId: health
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
              example: {}
  /activate:
    get:
      tags:
        - KGrid Activator Server
      summary: Finds all knowledge object endpoints
      description: |
        Returns a collection of endpoints
      operationId: activate
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
              example: {}
  /info:
    get:
      tags:
        - KGrid Activator Server
      summary: Finds all knowledge object endpoints
      description: |
        Returns a collection of endpoints
      operationId: info
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
              example: {}
  /endpoints:
    get:
      tags:
        - Knowledge Object Endpoint
      summary: Finds all knowledge object endpoint resources
      description: |
        Returns a collection of endpoints
      operationId: findallendpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  _embedded:
                    endpointResourceList:
                      - title: Implementation bundle v1 of Hello World
                        endpointPath: hello/world/v0.2.0/welcome
                        servicePath: hello/world/v0.2.0/service
                        activated: '2019-07-03T09:26:34.356'
                        _links:
                          self:
                            href: 'http://localhost:8080/hello/world/v0.2.0/welcome'
                          swagger_editor:
                            href: 'https://editor.swagger.io?url=http://localhost:8080/hello/world/v0.2.0/service'
                      - title: 'Ten-year Fatal Cardiovascular Risk Calculation based on SCORE project (Example KO - Bundled with data) '
                        endpointPath: score/calc/v0.2.0/score
                        servicePath: score/calc/v0.2.0/service
                        activated: '2019-07-03T09:26:34.273'
                        _links:
                          self:
                            href: 'http://localhost:8080/score/calc/v0.2.0/score'
                          swagger_editor:
                            href: 'https://editor.swagger.io?url=http://localhost:8080/score/calc/v0.2.0/service'
                  _links:
                    self:
                      - href: 'http://localhost:8080'



  /endpoints/{naan}/{name}/{implementation}/{endpoint}:
    get:
      tags:
        - Knowledge Object Endpoint
      summary: Finds a knowledge object's endpoint resource
      description: |
        Returns the Endpoint Resource which has access to the knowledge object implementation, the service description in the form of an Open Api specification, etc
      operationId: findkoendpoint
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: world
        - name: implementation
          in: path
          description: Specific Implementation of the KO
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: v0.1.0
        - name: endpoint
          in: path
          description: Specific endpoint path as defined in the OpenApi spec
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: welcome
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  title: Implementation koio v1 of Hello World
                  endpointPath: hello/world/v0.1.0/welcome
                  servicePath: hello/world/v0.1.0/service
                  activated: '2019-07-03T09:26:34.355'
                  _links:
                    self:
                      href: 'http://localhost:8080/hello/world/v0.1.0/welcome'
                    swagger_editor:
                      href: 'https://editor.swagger.io?url=http://localhost:8080/hello/world/v0.1.0/service'

  /{naan}/{name}/{implementation}/{endpoint}:
    post:
      tags:
        - Knowledge Object Endpoint
      summary: Executes the service provide by the Knowledge Object Implementation
      description: |
        Executes the service provide by the Knowledge Object Implementation as defined in the Knowledge Object Implementationâ€™s Open Api specification
      operationId: serverendpoint
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: world
        - name: implementation
          in: path
          description: Specific Implementation of the KO
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: v0.1.0
        - name: endpoint
          in: path
          description: Specific endpoint path as defined in the OpenApi spec
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: welcome
      requestBody:
        description: Endpoint json input
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                name: George Jetson
      responses:
        '200':
          description: KO Endpoint
          content:
            application/json:
              schema:
                type: object
              example:
                  result: 'Welcome to Knowledge Grid, George Jetson'
                  info:
                    ko:
                      '@id': v0.1.0
                      '@type': 'koio:Implementation'
                      identifier: 'ark:/hello/world/v0.1.0'
                      title: Implementation koio v1 of Hello World
                      hasServiceSpecification: v0.1.0/service.yaml
                      hasPayload: v0.1.0/welcome.js
                      '@context':
                        - 'http://kgrid.org/koio/contexts/implementation.jsonld'
                    inputs:
                      name: George Jetson
  /kos:
    get:
      tags:
        - Knowledge Object Read/Update/Delete
      summary: Finds all knowledge objects
      description: |
        Returns a collection of knowledge objects in the from of a JSON array. The JSON
        objects will follow the <a href="http://kgrid.org/koio/contexts/knowledgeobject.jsonld">KOIO scheme</a> for knowledge objects"
      operationId: findallkos
      responses:
        200:
          description: List of users of Knowledge Objects
          content:
            application/json:
              schema:
                type: object
                example:
                  ark:/hello/world:
                    '@id': hello-world
                    '@type': koio:KnowledgeObject
                    identifier: ark:/hello/world
                    title: Hello World Title
                    contributors: Kgrid Team
                    description: 'Test Hello World '
                    keywords: test hello world
                    hasImplementation:
                      - hello-world/v0.1.0
                      - hello-world/v0.2.0
                      - hello-world/v0.3.0
                    '@context':
                      - http://kgrid.org/koio/contexts/knowledgeobject.jsonld
                  ark:/score/calc:
                    '@id': score-calc
                    '@type': koio:KnowledgeObject
                    identifier: ark:/score/calc
                    title: 'Ten-year Fatal Cardiovascular Risk Calculation based on
                      SCORE project (Example KO) '
                    contributors: KGRID TEAM
                    description: SCORE risk calculation.
                    citations:
                      - https://academic.oup.com/eurheartj/article/24/11/987/427645
                    keywords: SCORE, ten-year, Cardiovascular risk, calculation
                    hasImplementation:
                      - score-calc/v0.1.0
                      - score-calc/v0.2.0
                      - score-calc/v0.3.0
                    '@context':
                      - http://kgrid.org/koio/contexts/knowledgeobject.jsonld
    post:
      tags:
        - Knowledge Object Import
      summary: Imports a packaged Knowledge Object as a zip file
      description: Takes a packaged Knowledge Object as a zip file in a ko form field
      operationId: depositKnowledgeObjectUsingPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/importKO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
              example:
                  Added: hello-world
  /kos/{naan}/{name}:
    get:
      tags:
        - Knowledge Object Read/Update/Delete
        - Knowledge Object Export
      summary: Find Knowledge Object based on
      operationId: findko
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: world
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  KnowledgeObject:
                    $ref: '#/components/examples/KnowledgeObject'
            application/zip:
              schema:
                type: string
                format: binary
        4XX:
          description: Bad request. User ID must be an integer and larger than 0.
        5XX:
          description: Unexpected error.
    put:
      tags:
        - Knowledge Object Read/Update/Delete
      summary: Update Knowledge Object
      operationId: updateko
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: world
      requestBody:
        description: Knowledge Object
        content:
          application/json:
            schema:
              type: object
            example:
                KnowledgeObject:
                  $ref: '#/components/examples/KnowledgeObject'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: jspn
              example:
                  KnowledgeObject:
                    $ref: '#/components/examples/KnowledgeObject'
    delete:
      tags:
        - Knowledge Object Read/Update/Delete
      summary: Delete Knowledge Object
      operationId: deleteko
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: world
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  KnowledgeObject:
                    $ref: '#/components/examples/KnowledgeObject'

  /kos/{naan}/{name}/{implementation}:
    get:
      tags:
        - Knowledge Object Implementation Read/Update/Delete
        - Knowledge Object Export
      summary: Find Knowledge Object based on
      operationId: findkoimplementation
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: world
        - name: implementation
          in: path
          description: Specific Implementation of the KO
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: v0.1.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  KnowledgeObjectImplementation:
                    $ref: '#/components/examples/KnowledgeObjectImplementation'
            application/zip:
              schema:
                type: string
                format: binary
    put:
      tags:
        - Knowledge Object Implementation Read/Update/Delete
      summary: Update Knowledge Object
      operationId: updatekoimplementation
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: world
        - name: implementation
          in: path
          description: Specific Implementation of the KO
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: v0.1.0
      requestBody:
        description: Knowledge Object
        content:
          application/json:
            schema:
              type: object
            example:
                KnowledgeObjectImplementation:
                  $ref: '#/components/examples/KnowledgeObjectImplementation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  KnowledgeObjectImplementation:
                    $ref: '#/components/examples/KnowledgeObjectImplementation'
    delete:
      tags:
        - Knowledge Object Implementation Read/Update/Delete
      summary: Delete Knowledge Object Implementation
      operationId: deletekoimplementation
      parameters:
        - name: naan
          in: path
          description: Name Assigning Authority unique number
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: hello
        - name: name
          in: path
          description: Name Assigning Authority name
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: world
        - name: implementation
          in: path
          description: Specific Implementation of the KO
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: v0.1.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
              example:
                  KnowledgeObject:
                    $ref: '#/components/examples/KnowledgeObject'

  '/kos/manifest':
    post:
      tags:
        -  Knowledge Object Import
      summary: Imports packaged Knowledge Object based on url to artifact
      description: |
        Imports Knowledge Object based on a collectoin of urls that point to packaged Knowledge Object artifacts (zip file)
      operationId: importmanifest
      requestBody:
        description: Import Manifest
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                manifest:
                  - 'https://github.com/kgrid-objects/example-collection/releases/download/1.4.0/hello-world.zip'
                  - 'https://github.com/kgrid-objects/example-collection/releases/download/1.4.0/ri-bmicalc.zip'
                  - 'https://github.com/kgrid-objects/example-collection/releases/download/1.4.0/score-calc.zip'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                format: json
                example:
                  Added:
                    - 'ark:/hello/world'
                    - 'ark:/ri/bmicalc'
                    - 'ark:/score/calc'

components:

  examples:
    KnowledgeObject:
      value:
        '@id': hello-world
        '@type': koio:KnowledgeObject
        identifier: ark:/hello/world
        title: Hello World Title
        contributors: Kgrid Team
        description: 'Test Hello World '
        keywords: test hello world
        hasImplementation:
          - hello-world/v0.1.0
          - hello-world/v0.2.0
          - hello-world/v0.3.0
        '@context':
        - http://kgrid.org/koio/contexts/knowledgeobject.jsonld

    KnowledgeObjectImplementation:
      value:
        '@id': v0.1.0
        '@type': koio:Implementation
        identifier: ark:/hello/world/v0.1.0
        title: Implementation koio v1 of Hello World
        hasServiceSpecification: v0.1.0/service.yaml
        hasPayload: v0.1.0/welcome.js
        '@context':
        - http://kgrid.org/koio/contexts/implementation.jsonld

  schemas:
    importKO:
      type: object
      properties:
        ko:
          type: string
          format: binary
